@using ContainerDeck.Shared.Models
@implements IDialogContentComponent<Agent>

@* Header *@
<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.Person())" />
        <FluentLabel Typo="Typography.H4">
            @Dialog!.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

@* Body *@
<FluentDialogBody>
    <FluentTextField @bind-Value="@Content.Name">Name:</FluentTextField>
    <FluentTextField @bind-Value="@Content.Address">Address:</FluentTextField>
</FluentDialogBody>


@* Footer *@
<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent" OnClick="@SaveAsync">Save</FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>


@code
{
    [Parameter]
    public Agent Content { get; set; } = new Agent("Local", "http://localhost:5000");

    [CascadingParameter]
    public FluentDialog? Dialog { get; set; }


    private async Task SaveAsync()
    {
        await Dialog!.CloseAsync(Content);
    }

    private async Task CancelAsync()
    {
        await Dialog!.CancelAsync();
    }
}   

